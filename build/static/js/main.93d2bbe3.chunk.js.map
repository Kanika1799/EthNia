{"version":3,"sources":["utils/getWeb3.js","Navbar.js","utils.js","newreview.js","newtoken.js","TrackArtifact.js","Profile.js","HODdash.js","parentsdash.js","TGDash.js","index.js","App.js","../node_modules/web3-eth-accounts/src sync"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","terminal","enable","console","log","provider","providers","HttpProvider","NavExample","props","toggleNavbar","bind","navclick","state","collapseOpen","value","this","setState","Math","random","type","theme","expand","className","onClick","open","navbar","navlink","active","to","React","Component","getContractInstance","eth","getAccounts","accounts","net","getId","networkId","deployedNetwork","Travel","networks","instance","Contract","abi","address","obj","alert","error","ipfsClient","require","CreateReview","runExample","protocol","add","added_file_hash","progress","prog","then","response","ipfsId","hash","contract","content","JSON","stringify","subject","details","methods","add_posts","latlng","send","from","catch","err","componentDidMount","mapRef","createRef","handleClick","map","current","leafletElement","locate","handleLocationFound","e","hasLocation","lat","lng","handleInput","captureFile","event","stopPropagation","preventDefault","target","files","name","Object","assign","marker","Marker","position","Popup","sm","md","placeholder","onChange","Map","center","length","onLocationfound","ref","zoom","TileLayer","attribution","url","CreateToken","mint_token","TrackArtifact","getPostCount","call","count","responses","i","getPosts","push","posts","handleVote","action","upvote","id","downvote","toggle","collapse","listItems","item","index","parse","width","src","addr","upvotes","downvotes","Profile","TrackHistory","myProfile","profile","kudos","tokenid","kcount","k","ownerOf","tokenURI","tokenurli","myprofile","kudosList","image","description","tokens","CreatedArtifacts","history","tx","latestOne","newState","key","txId","Main","storageValue","exact","path","component","rel","href","ReactDOM","render","document","getElementById","webpackEmptyContext","req","Error","code","keys","module","exports"],"mappings":"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","file":"static/js/main.93d2bbe3.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.terminal.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React from \"react\";\nimport {\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormInput,\n  Collapse\n} from \"shards-react\";\nimport {\n  HashRouter,\n  NavLink\n} from \"react-router-dom\";\n\nimport './index.css'\n\nexport default class NavExample extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.navclick = this.navclick.bind(this);\n\n    this.state = {\n      collapseOpen: false,\n      value: 0,\n    };\n  }\n\n  toggleNavbar() {\n    this.setState({\n      ...this.state,\n      ...{\n        collapseOpen: !this.state.collapseOpen\n      }\n    });\n  }\n   navclick(){\n     this.setState({value: Math.random()});\n   }\n\n  render() {\n    return (\n      <div>\n      <HashRouter>\n      <Navbar type=\"dark\" theme=\"primary\" expand=\"md\" className=\"navbar-class\">\n\n        <NavbarToggler onClick={this.toggleNavbar} />\n\n        <Collapse open={this.state.collapseOpen} navbar>\n          <Nav navbar>\n            <NavItem>\n              <NavLink onClick={this.navlink} active to=\"/\" className=\"nav-link\">\n                Home\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink onClick={this.navlink} to=\"/new-review\" className=\"nav-link\">\n              Add Place\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink onClick={this.navlink} to=\"/places-near\" className=\"nav-link\">\n              Places Near Me\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink onClick={this.navlink} to=\"/new-token\" className=\"nav-link\">\n              Get New Token\n              </NavLink>\n            </NavItem>\n          </Nav>\n\n          <Nav navbar className=\"ml-auto\">\n            <NavItem>\n              <NavLink to=\"/profile\" className=\"nav-link\">\n              Daniel\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n      </HashRouter>\n      </div>\n    );\n  }\n}\n","import getWeb3 from './utils/getWeb3.js'\nimport Travel from \"./contracts/Travel.json\";\n\nconst getContractInstance = async () => {\n  try {\n    // Get network provider and web3 instance.\n    const web3 = await getWeb3();\n\n    // Use web3 to get the user's accounts.\n    const accounts = await web3.eth.getAccounts();\n\n    // Get the contract instance.\n    const networkId = await web3.eth.net.getId();\n    const deployedNetwork = Travel.networks[networkId];\n    const instance = new web3.eth.Contract(\n      Travel.abi,\n      deployedNetwork && deployedNetwork.address,\n    );\n\n    const obj = {\n      'web3':web3,\n      'accounts': accounts, 'contract': instance\n    };\n\n    return obj;\n  } catch (error) {\n    alert(\n      `Failed to load web3, accounts, or contract. Check console for details.`,\n    );\n    console.error(error);\n    return error;\n  }\n}\n\nexport default getContractInstance;\n","import React from \"react\";\nimport { Collapse,Container,Row, FormInput, Button,Col, Card,CardHeader,CardTitle,CardBody,FormTextarea,Badge } from \"shards-react\";\nimport Travel from \"./contracts/Travel.json\";\nimport getContractInstance from './utils.js';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nvar ipfsClient = require('ipfs-http-client')\n\ntype State = {\n  hasLocation: boolean,\n  latlng: {\n    lat: number,\n    lng: number,\n  },\n}\n\nexport default class CreateReview extends React.Component<{}, State> {\n\n  captureFile (event) {\n    event.stopPropagation()\n    event.preventDefault()\n    this.setState({added_file_hash: event.target.files});\n  }\n\n  runExample = async () => {\n    var ipfs = ipfsClient('ipfs.infura.io', '5001', { protocol: 'https' });\n    let ipfsId;\n    ipfs.add([...this.state.added_file_hash], { progress: (prog) => console.log(`received: ${prog}`) })\n      .then((response) => {\n        console.log(response);\n        ipfsId = response[0].hash;\n        console.log(ipfsId);\n        ( async () => {\n            const { accounts, contract } = this.state;\n            let content = JSON.stringify({'subject':this.state.subject,'details':this.state.details,'ipfsId':ipfsId});\n            await contract.methods.add_posts(content, JSON.stringify(this.state.latlng)).send({ from: accounts[0] });\n        })();\n        this.setState({});\n      }).catch((err) => {\n        console.error(err);\n      });\n\n      console.log(this.state.latlng);\n    //this.setState({subject:'',details:'',name:''}, this.getApplications);\n  };\n\n  componentDidMount = async () => {\n    const obj = await getContractInstance();\n    this.setState({ web3:obj.web3, accounts:obj.accounts, contract: obj.contract});\n  };\n  mapRef = React.createRef();\n  constructor(props){\n    super(props);\n    this.state = {\n      subject: '',\n      details: '',\n      web3: null,\n      accounts: null,\n      contract: null,\n      hasLocation: false,\n      latlng: {\n      lat: 51.505,\n      lng: -0.09,\n    },\n      added_file_hash: null\n    };\n\n    this.handleInput = this.handleInput.bind(this);\n    this.runExample = this.runExample.bind(this);\n    this.captureFile = this.captureFile.bind(this);\n  }\n\n  handleClick = () => {\n    const map = this.mapRef.current\n    if (map != null) {\n      map.leafletElement.locate()\n    }\n  }\n\n  handleLocationFound = (e: Object) => {\n    this.setState({\n      hasLocation: true,\n      latlng: e.latlng,\n    })\n  }\n\n  handleInput(event) {\n    const target = event.target;\n    if (target.name == \"subject\"){\n      this.setState(Object.assign({}, this.state, {subject: target.value}));\n    }\n    else if (target.name == \"details\") {\n      this.setState(Object.assign({}, this.state, {details: target.value}));\n    }\n    else {\n      this.setState(Object.assign({}, this.state, {name: target.value}));\n    }\n  }\n  render(){\n    const marker = this.state.hasLocation ? (\n      <Marker position={this.state.latlng}>\n        <Popup>You are here</Popup>\n      </Marker>\n    ) : null\n    return(\n      <div>\n        <Container className=\"main-container\">\n          <Row>\n            <Col sm=\"12\" md=\"12\">\n              <div>\n                <h3>Add New Place</h3><hr/> <br />\n                <Card>\n                  <CardHeader>Enter The Details Of Place</CardHeader>\n                  <CardBody>\n                    <CardTitle>A Catchy Title</CardTitle>\n                    <FormInput name=\"subject\" placeholder=\"Header\" value={this.state.subject} onChange={this.handleInput} />\n                    <br />\n                    <CardTitle>Why is it Awesome </CardTitle>\n                    <FormTextarea name=\"details\" value={this.state.details} onChange={this.handleInput} placeholder=\"Enter Place Details\"/>\n                    <br />\n                    <CardTitle>Where Is It</CardTitle>\n                    <Map\n                center={this.state.latlng}\n                length={4}\n                onClick={this.handleClick}\n                onLocationfound={this.handleLocationFound}\n                ref={this.mapRef}\n                zoom={13}>\n                <TileLayer\n                  attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                {marker}\n                  </Map>\n                    <br />\n                    <CardTitle>Give Us Some Images</CardTitle>\n                    <FormInput type=\"file\" theme=\"danger\" onChange={this.captureFile} placeholder=\"Upload an Image\" className=\"form-control\"/>\n                    <br /> <br />\n                    <center><Button theme=\"success\" onClick={this.runExample}>Submit</Button></center>\n                  </CardBody>\n                </Card>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Collapse,Container,Row, FormInput, Button,Col, Card,CardHeader,CardTitle,CardBody,FormTextarea,Badge } from \"shards-react\";\nimport Travel from \"./contracts/Travel.json\";\nimport getContractInstance from './utils.js';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nvar ipfsClient = require('ipfs-http-client');\n\ntype State = {\n  hasLocation: boolean,\n  latlng: {\n    lat: number,\n    lng: number,\n  },\n}\n\nexport default class CreateToken extends React.Component<{}, State> {\n\n  captureFile (event) {\n    event.stopPropagation()\n    event.preventDefault()\n    this.setState({added_file_hash: event.target.files});\n  }\n\n  runExample = async () => {\n    var ipfs = ipfsClient('ipfs.infura.io', '5001', { protocol: 'https' });\n    let ipfsId;\n    ipfs.add([...this.state.added_file_hash], { progress: (prog) => console.log(`received: ${prog}`) })\n      .then((response) => {\n        console.log(response);\n        ipfsId = response[0].hash;\n        console.log(ipfsId);\n        ( async () => {\n            const { accounts, contract } = this.state;\n            let content = JSON.stringify(\n              {\n                \"description\": \"This is a Travel Token.\",\n                \"image\": \"https://ipfs.io/ipfs/\" + ipfsId,\n                \"name\": this.state.name,\n              }\n            );\n            await contract.methods.mint_token(content).send({ from: accounts[0] });\n        })();\n        this.setState({});\n      }).catch((err) => {\n        console.error(err);\n      });\n    //this.setState({subject:'',details:'',name:''}, this.getApplications);\n  };\n\n  componentDidMount = async () => {\n    const obj = await getContractInstance();\n    this.setState({ web3:obj.web3, accounts:obj.accounts, contract: obj.contract});\n  };\n  \n  mapRef = React.createRef();\n  constructor(props){\n    super(props);\n    this.state = {\n      name: '',\n      details: '',\n      web3: null,\n      accounts: null,\n      contract: null,\n      hasLocation: false,\n      latlng: {\n      lat: 51.505,\n      lng: -0.09,\n    },\n      added_file_hash: null\n    };\n\n    this.handleInput = this.handleInput.bind(this);\n    this.runExample = this.runExample.bind(this);\n    this.captureFile = this.captureFile.bind(this);\n  }\n\n  handleClick = () => {\n    const map = this.mapRef.current\n    if (map != null) {\n      map.leafletElement.locate()\n    }\n  }\n\n  handleLocationFound = (e: Object) => {\n    this.setState({\n      hasLocation: true,\n      latlng: e.latlng,\n    })\n  }\n\n  handleInput(event) {\n    const target = event.target;\n    if (target.name == \"name\"){\n      this.setState(Object.assign({}, this.state, {name: target.value}));\n    }\n    else if (target.name == \"details\") {\n      this.setState(Object.assign({}, this.state, {details: target.value}));\n    }\n    else {\n      this.setState(Object.assign({}, this.state, {name: target.value}));\n    }\n  }\n  render(){\n    const marker = this.state.hasLocation ? (\n      <Marker position={this.state.latlng}>\n        <Popup>You are here</Popup>\n      </Marker>\n    ) : null\n    return(\n      <div>\n        <Container className=\"main-container\">\n          <Row>\n            <Col sm=\"12\" md=\"12\">\n              <div>\n                <h3>Get New Token</h3><hr/> <br />\n                <Card>\n                  <CardHeader>Enter The Details Of Place</CardHeader>\n                  <CardBody>\n                    <CardTitle>Name of The Place</CardTitle>\n                    <FormInput name=\"name\" placeholder=\"Header\" value={this.state.name} onChange={this.handleInput} />\n                    <br />\n                    <CardTitle>Where Is It</CardTitle>\n                    <Map\n                center={this.state.latlng}\n                length={4}\n                onClick={this.handleClick}\n                onLocationfound={this.handleLocationFound}\n                ref={this.mapRef}\n                zoom={13}>\n                <TileLayer\n                  attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                {marker}\n                  </Map>\n                    <br />\n                    <CardTitle>Give Us Some Image</CardTitle>\n                    <FormInput type=\"file\" theme=\"danger\" onChange={this.captureFile} placeholder=\"Upload an Image\" className=\"form-control\"/>\n                    <br /> <br />\n                    <center><Button theme=\"success\" onClick={this.runExample}>Submit</Button></center>\n                  </CardBody>\n                </Card>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport getContractInstance from './utils.js';\nimport Travel from \"./contracts/Travel.json\";\n\nimport {\n  Row,\n  Col,\n  Container,\n  Button,\n  FormInput,\n  Collapse,\n  Card,\n  CardFooter,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  CardImg,\n  Badge\n} from 'shards-react';\n\nexport default class TrackArtifact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts : [],\n      contract : null,\n      accounts: null,\n      web3: null,\n    };\n\n    this.toggle = this.toggle.bind(this);\n    //this.runExample = this.runExample.bind(this);\n  }\n\n  toggle() {\n    this.setState({ collapse: !this.state.collapse });\n  }\n\n  componentDidMount = async () => {\n    const obj = await getContractInstance();\n    const accounts = obj.accounts;\n    const contract = obj.contract;\n    let count = await contract.methods.getPostCount().call({ from: accounts[0] });\n    let responses = [];\n    for(let i=0;i<count;i++){\n      let response = await contract.methods.getPosts(i).call({from: accounts[0]});\n      responses.push(response);\n    }\n    console.log(responses);\n    this.setState({ web3:obj.web3, accounts:obj.accounts, contract: obj.contract,posts:responses});\n  }\n\n  handleVote = async(event) => {\n    const action = event.target.value;\n    const { accounts, contract } = this.state;\n    if (action === \"yes\"){\n      await contract.methods.upvote(event.target.id).send({ from: accounts[0] });\n    }\n    else {\n      await contract.methods.downvote(event.target.id).send({ from: accounts[0] });\n    }\n  }\n\n  render(){\n    const listItems = this.state.posts.map((item, index) =>\n          <Col sm=\"12\" md=\"4\">\n            <Card>\n            <CardHeader>{JSON.parse(item.content).subject}</CardHeader>\n            <CardImg width=\"390\" src={\"https://ipfs.io/ipfs/\" +(JSON.parse(item.content).ipfsId)} />\n            <CardBody>\n              <hr />\n              <p>Place Added By Name :- {item.addr}</p>\n              <hr />\n              <p>{JSON.parse(item.content).details}</p>\n              <hr />\n              <Badge theme=\"success\">Upvotes :- { JSON.parse(item.upvotes) }</Badge>\n              <Badge theme=\"danger\">Downvotes :- { JSON.parse(item.downvotes) }</Badge><br /><br />\n              <Button id={index} theme=\"success\" value=\"yes\" onClick={this.handleVote}>It was Awesome</Button>\n              <Button id={index} theme=\"danger\" value=\"no\" onClick={this.handleVote}>Not that Good</Button>\n            </CardBody>\n          </Card>\n          </Col>  \n  )\n    return(\n      <div>\n        <Container className=\"main-container\">\n        <Row>\n        <Col sm=\"12\" md=\"12\">\n      <div>\n        <h3>Awesome Places Near You !!!</h3> <br />\n        <Row>\n        {listItems}\n        </Row>\n      </div>\n    </Col>\n    </Row>\n    </Container>\n  </div>\n    );\n  }\n}\n","import React from \"react\";\nimport getContractInstance from './utils.js';\nimport Travel from \"./contracts/Travel.json\";\n\nimport {\n  Row,\n  Col,\n  Container,\n  Button,\n  FormInput,\n  Collapse,\n  Card,\n  CardFooter,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  CardImg,\n  ListGroup,\n  ListGroupItem,\n} from 'shards-react';\n\nexport default class Profile extends React.Component {\n  render() {\n    return (\n      <div>\n        <Container className=\"main-container\">\n        <Row>\n        <Col sm=\"12\" md=\"12\">\n        <TrackHistory></TrackHistory>\n        </Col>\n        </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nclass TrackHistory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.runExample = this.runExample.bind(this);\n    this.state = {\n      posts : [],\n      contract : null,\n      accounts: null,\n      web3: null,\n      profile: {},\n      kudos: [],\n    };\n  }\n\n  toggle() {\n    this.setState({ collapse: !this.state.collapse });\n  }\n\n  runExample = async () => {\n\n    const { accounts, contract } = this.state;\n    let count = await contract.methods.getPostCount().call({ from: accounts[0] });\n    let responses = [];\n    for(let i=0;i<count;i++){\n      let response = await contract.methods.getPosts(i).call({from: accounts[0]});\n      responses.push(response);\n    }\n    let profile = await contract.methods.myProfile().call({ from: accounts[0] });\n    console.log(responses);\n    console.log(profile);\n    let kudos = [];\n    let kcount = await contract.methods.tokenid().call({ from: accounts[0] });\n    for(let k=0; k<kcount; k++){\n      let owner = await contract.methods.ownerOf(k).call({ from: accounts[0] });\n      if(owner == accounts[0]){\n        let tokenurli = await contract.methods.tokenURI(k).call({from:accounts[0]});\n        kudos.push(tokenurli);\n      }\n    }\n    console.log('Kudos is ');\n    console.log(kudos);\n    this.setState({posts:responses, profile:profile, kudos:kudos});\n  };\n\n  componentDidMount = async () => {\n    const obj = await getContractInstance();\n    this.setState({ web3:obj.web3, accounts:obj.accounts, contract: obj.contract});\n    this.runExample();\n  };\n\n  render(){\n\n    const myprofile = this.state.profile;\n    console.log(myprofile);\n    const kudosList = this.state.kudos.map((item, index) =>\n\n      <Col sm=\"12\" md=\"3\">\n        <Card>\n        <CardHeader>{JSON.parse(item).name}</CardHeader>\n        <CardImg width=\"285\" src={JSON.parse(item).image}/>\n        <CardBody>\n          <p>{JSON.parse(item).description}</p>\n          </CardBody>\n      </Card>\n      </Col>\n\n  )\n    const listItems = this.state.posts.map((item) =>\n\n      <Col sm=\"12\" md=\"12\">\n        <ListGroupItem>\n          <CardImg width=\"50\" src=\"https://c.gitcoin.co/avatars/0357f94b529985a8a898ab338add0edf/djrosenbaum.png\" />\n          <CardImg width=\"50\" src={\"https://ipfs.io/ipfs/\" +(JSON.parse(item.content).ipfsId)} />\n          <Row>\n            <Col sm=\"4\" md=\"6\">\n              <p>Reviewer Name :- {item.addr}</p>\n            </Col>\n            <Col sm=\"4\" md=\"6\">\n              <p>Place Location :- </p>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm=\"4\" md=\"6\">\n              <p >Subject :- {JSON.parse(item.content).subject}</p>\n            </Col>\n            <Col sm=\"4\" md=\"6\">\n              <Button theme=\"success\">See More</Button>\n            </Col>\n\n          </Row>\n        </ListGroupItem>\n      </Col>\n\n  )\n    return(\n      <div>\n        <Row>\n          <Col sm=\"12\" md=\"3\">\n              <CardImg width=\"200\" src=\"https://c.gitcoin.co/avatars/0357f94b529985a8a898ab338add0edf/djrosenbaum.png\" /> <br /> <br/>\n              <h3><b>Daniel</b></h3>\n          </Col>\n          <Col sm=\"12\" md=\"9\">\n            <div>\n              <Card>\n                <CardHeader>  Your XP :- 3</CardHeader>\n                <CardBody>\n                  <p>Total Posts :- {this.state.profile.posts}</p>\n                  <p>Total Kudos :- {this.state.profile.tokens}</p>\n                  <p>Total Upvotes :- {this.state.profile.upvotes}</p>\n                  <p>Total Downvotes :- {this.state.profile.downvotes}</p>\n                  </CardBody>\n                </Card>\n            </div>\n          </Col>\n        </Row>\n        <br />\n        <br />\n      <hr />\n        <h5>Places You have Added</h5>\n        <Row>\n          <ListGroup>\n        {listItems}\n          </ListGroup>\n        </Row>\n\n        <br/ >\n          <hr />\n            <h5>Your Kudos</h5>\n            <Row>\n\n            {kudosList}\n\n            </Row>\n        <Row>\n\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Collapse,Container,Row, FormInput, Button,Col, Card,CardHeader,CardTitle,CardBody,FormTextarea,FormSelect,Badge } from \"shards-react\";\n\nexport default class HODdash extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latestArtifact: 'Application 1',\n      new : Math.random(),\n    };\n  }\n  getNewArtifact(hash){\n    const latestArtifact = this.state.latestArtifact;\n    const latestArtifactNew = hash;\n    console.log('Changes  new artifact ');\n    console.log(hash);\n    this.setState({latestArtifact:latestArtifactNew, new:Math.random()});\n  }\n\n  render(){\n    return(\n      <div>\n        <Container className=\"main-container\">\n        <Row>\n        <Col sm=\"12\" md=\"12\">\n        <CreatedArtifacts key={this.state.new} latestOne={this.state.latestArtifact} ></CreatedArtifacts>\n        </Col>\n        </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nclass NewArtifact extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      reciever: '',\n      coordinates: '',\n      name: '',\n    };\n\n    this.handleInput = this.handleInput.bind(this);\n    this.addArtifact = this.addArtifact.bind(this);\n  }\n\n  addArtifact(){\n    return '';\n  }\n\n  handleInput(event) {\n    const target = event.target;\n    if (target.name == \"reciever\"){\n      this.setState(Object.assign({}, this.state, {reciever: target.value}));\n    }\n    else if (target.name == \"coordinates\") {\n      this.setState(Object.assign({}, this.state, {coordinates: target.value}));\n    }\n    else {\n      this.setState(Object.assign({}, this.state, {name: target.value}));\n    }\n  }\n\n  render(){\n    return(\n      <div>\n      <h3>Enter New Application</h3><hr/> <br />\n      <Card>\n      <CardHeader>Enter The Details Of Application</CardHeader>\n      <CardBody>\n        <CardTitle>Subject</CardTitle>\n        <FormInput name=\"reciever\" placeholder=\"Subject\" value={this.state.reciever} onChange={this.handleInput} />\n        <br />\n        <CardTitle>Application Details</CardTitle>\n        <FormTextarea placeholder=\"Enter Application Details\"/>\n\n        <br />\n\n        <CardTitle>Application From:</CardTitle>\n        <FormInput name=\"name\" placeholder=\"Application From\" value={this.state.name} onChange={this.handleInput}/>\n        <br />\n        <CardTitle>Application To:</CardTitle>\n        <FormSelect>\n      <option value=\"first\">HOD</option>\n      <option value=\"second\">Teacher Guardian</option>\n      <option value=\"third\"> Parents</option>\n\n    </FormSelect>\n    <br /> <br />\n        <Button onClick={this.addArtifact}></Button>\n      </CardBody>\n\n    </Card>\n      </div>\n    );\n  }\n}\n\n\nclass CreatedArtifacts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = { collapse: false, 'num':2, history: [] };\n    var tx = this.props.latestOne;\n    console.log('Tx is');\n    console.log(tx);\n    const history = this.state.history;\n    console.log('History Before Adding');\n    console.log(history);\n    if(tx){\n      history.push(tx);\n    }\n    console.log('New History');\n    console.log(history);\n    var newState = Object.assign({}, this.state , {history: history});\n    this.state = newState;\n  }\n\n  toggle() {\n    this.setState({ collapse: !this.state.collapse });\n  }\n\n  render(){\n    const listItems = this.state.history.map((item) =>\n      <li key={item.txId} className=\"list-items-artifacts\">\n      <br/ >\n      <Card>\n      <CardHeader>Latest Application Id:-{item.txId} </CardHeader>\n      <CardBody>\n        <p>Application Name :- </p>\n        <p>Current status</p>\n\n        <Button onClick={this.toggle}>See The Status</Button>\n        <Button>Approve</Button>\n        <Collapse open={this.state.collapse}>\n\n        <br/ >\n            <span>\n            <Badge theme=\"success\">Parents</Badge>\n       <Badge theme=\"danger\">Teacher Guardian</Badge>\n      <Badge theme=\"danger\">HOD</Badge>\n\n            </span>\n\n        </Collapse>\n      </CardBody>\n    </Card>\n      </li>\n    )\n    return(\n        <div>\n        <h3>Previously Created Application</h3><hr/> <br />\n        {listItems}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Collapse,Container,Row, FormInput, Button,Col, Card,CardHeader,CardTitle,CardBody,FormTextarea,FormSelect,Badge } from \"shards-react\";\n\nexport default class parentsdash extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latestArtifact: 'Application 1',\n      new : Math.random(),\n    };\n  }\n  getNewArtifact(hash){\n    const latestArtifact = this.state.latestArtifact;\n    const latestArtifactNew = hash;\n    console.log('Changes  new artifact ');\n    console.log(hash);\n    this.setState({latestArtifact:latestArtifactNew, new:Math.random()});\n  }\n\n  render(){\n    return(\n      <div>\n        <Container className=\"main-container\">\n        <Row>\n        <Col sm=\"12\" md=\"12\">\n        <CreatedArtifacts key={this.state.new} latestOne={this.state.latestArtifact} ></CreatedArtifacts>\n        </Col>\n        </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nclass NewArtifact extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      reciever: '',\n      coordinates: '',\n      name: '',\n    };\n\n    this.handleInput = this.handleInput.bind(this);\n    this.addArtifact = this.addArtifact.bind(this);\n  }\n\n  addArtifact(){\n    return '';\n  }\n\n  handleInput(event) {\n    const target = event.target;\n    if (target.name == \"reciever\"){\n      this.setState(Object.assign({}, this.state, {reciever: target.value}));\n    }\n    else if (target.name == \"coordinates\") {\n      this.setState(Object.assign({}, this.state, {coordinates: target.value}));\n    }\n    else {\n      this.setState(Object.assign({}, this.state, {name: target.value}));\n    }\n  }\n  render(){\n    return(\n      <div>\n      <h3>Enter New Application</h3><hr/> <br />\n      <Card>\n      <CardHeader>Enter The Details Of Application</CardHeader>\n      <CardBody>\n        <CardTitle>Subject</CardTitle>\n        <FormInput name=\"reciever\" placeholder=\"Subject\" value={this.state.reciever} onChange={this.handleInput} />\n        <br />\n        <CardTitle>Application Details</CardTitle>\n        <FormTextarea placeholder=\"Enter Application Details\"/>\n\n        <br />\n\n        <CardTitle>Application From:</CardTitle>\n        <FormInput name=\"name\" placeholder=\"Application From\" value={this.state.name} onChange={this.handleInput}/>\n        <br />\n        <CardTitle>Application To:</CardTitle>\n        <FormSelect>\n      <option value=\"first\">HOD</option>\n      <option value=\"second\">Teacher Guardian</option>\n      <option value=\"third\"> Parents</option>\n\n    </FormSelect>\n    <br /> <br />\n        <Button onClick={this.addArtifact}></Button>\n      </CardBody>\n\n    </Card>\n      </div>\n    );\n  }\n}\n\nclass CreatedArtifacts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = { collapse: false, 'num':2, history: [] };\n    var tx = this.props.latestOne;\n    console.log('Tx is');\n    console.log(tx);\n    const history = this.state.history;\n    console.log('History Before Adding');\n    console.log(history);\n    if(tx){\n      history.push(tx);\n    }\n    console.log('New History');\n    console.log(history);\n    var newState = Object.assign({}, this.state , {history: history});\n    this.state = newState;\n  }\n\n  toggle() {\n    this.setState({ collapse: !this.state.collapse });\n  }\n\n  render(){\n    const listItems = this.state.history.map((item) =>\n      <li key={item.txId} className=\"list-items-artifacts\">\n      <br/ >\n      <Card>\n      <CardHeader>Latest Application Id:-{item.txId} </CardHeader>\n      <CardBody>\n        <p>Application Name :- </p>\n        <p>Current status</p>\n\n        <Button onClick={this.toggle}>See The Status</Button>\n        <Button>Approve</Button>\n        <Collapse open={this.state.collapse}>\n\n        <br/ >\n            <span>\n            <Badge theme=\"success\">Parents</Badge>\n       <Badge theme=\"danger\">Teacher Guardian</Badge>\n      <Badge theme=\"danger\">HOD</Badge>\n\n            </span>\n\n        </Collapse>\n      </CardBody>\n    </Card>\n      </li>\n    )\n    return(\n        <div>\n        <h3>Previously Created Application</h3><hr/> <br />\n        {listItems}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Collapse,Container,Row, FormInput, Button,Col, Card,CardHeader,CardTitle,CardBody,FormTextarea,FormSelect,Badge } from \"shards-react\";\n\n\nexport default class TGdash extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latestArtifact: 'Application 1',\n      new : Math.random(),\n    };\n  }\n\n  getNewArtifact(hash){\n    const latestArtifact = this.state.latestArtifact;\n    const latestArtifactNew = hash;\n    console.log('Changes  new artifact ');\n    console.log(hash);\n    this.setState({latestArtifact:latestArtifactNew, new:Math.random()});\n  }\n\n  render(){\n    return(\n      <div>\n        <Container className=\"main-container\">\n        <Row>\n        <Col sm=\"12\" md=\"12\">\n        <CreatedArtifacts key={this.state.new} latestOne={this.state.latestArtifact} ></CreatedArtifacts>\n        </Col>\n        </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nclass NewArtifact extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      reciever: '',\n      coordinates: '',\n      name: '',\n    };\n\n    this.handleInput = this.handleInput.bind(this);\n    this.addArtifact = this.addArtifact.bind(this);\n  }\n\n  addArtifact(){\n    return '';\n  }\n\n  handleInput(event) {\n    const target = event.target;\n    if (target.name == \"reciever\"){\n      this.setState(Object.assign({}, this.state, {reciever: target.value}));\n    }\n    else if (target.name == \"coordinates\") {\n      this.setState(Object.assign({}, this.state, {coordinates: target.value}));\n    }\n    else {\n      this.setState(Object.assign({}, this.state, {name: target.value}));\n    }\n  }\n   render(){\n    return(\n      <div>\n      <h3>Enter New Application</h3><hr/> <br />\n      <Card>\n      <CardHeader>Enter The Details Of Application</CardHeader>\n      <CardBody>\n        <CardTitle>Subject</CardTitle>\n        <FormInput name=\"reciever\" placeholder=\"Subject\" value={this.state.reciever} onChange={this.handleInput} />\n        <br />\n        <CardTitle>Application Details</CardTitle>\n        <FormTextarea placeholder=\"Enter Application Details\"/>\n\n        <br />\n\n        <CardTitle>Application From:</CardTitle>\n        <FormInput name=\"name\" placeholder=\"Application From\" value={this.state.name} onChange={this.handleInput}/>\n        <br />\n        <CardTitle>Application To:</CardTitle>\n        <FormSelect>\n      <option value=\"first\">HOD</option>\n      <option value=\"second\">Teacher Guardian</option>\n      <option value=\"third\"> Parents</option>\n\n    </FormSelect>\n    <br /> <br />\n        <Button onClick={this.addArtifact}></Button>\n      </CardBody>\n\n    </Card>\n      </div>\n    );\n  }\n}\nclass CreatedArtifacts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = { collapse: false, 'num':2, history: [] };\n    var tx = this.props.latestOne;\n    console.log('Tx is');\n    console.log(tx);\n    const history = this.state.history;\n    console.log('History Before Adding');\n    console.log(history);\n    if(tx){\n      history.push(tx);\n    }\n    console.log('New History');\n    console.log(history);\n    var newState = Object.assign({}, this.state , {history: history});\n    this.state = newState;\n  }\n\n  toggle() {\n    this.setState({ collapse: !this.state.collapse });\n  }\n\n  render(){\n    const listItems = this.state.history.map((item) =>\n      <li key={item.txId} className=\"list-items-artifacts\">\n      <br/ >\n      <Card>\n      <CardHeader>Latest Application Id:-{item.txId} </CardHeader>\n      <CardBody>\n        <p>Application Name :- </p>\n        <p>Current status</p>\n\n        <Button onClick={this.toggle}>See The Status</Button>\n        <Button>Approve</Button>\n        <Collapse open={this.state.collapse}>\n\n        <br/ >\n            <span>\n            <Badge theme=\"success\">Parents</Badge>\n       <Badge theme=\"danger\">Teacher Guardian</Badge>\n      <Badge theme=\"danger\">HOD</Badge>\n\n            </span>\n\n        </Collapse>\n      </CardBody>\n    </Card>\n      </li>\n    )\n    return(\n        <div>\n        <h3>Previously Created Application</h3><hr/> <br />\n        {listItems}\n      </div>\n    );\n  }\n}\n","// Imports -----------------------------\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport getWeb3 from \"./utils/getWeb3\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\n\nimport {Container, Row, Col, FormInput, Button ,Card,CardHeader,CardTitle,CardBody,CardFooter } from \"shards-react\";\nimport {\n  Route,\n  HashRouter\n} from \"react-router-dom\";\n\nimport './index.css';\nimport NavExample from './Navbar';\nimport CreateReview from './newreview';\nimport CreateToken from './newtoken';\nimport TrackArtifact from './TrackArtifact';\nimport Profile from './Profile';\nimport HODdash from './HODdash';\nimport parentsdash from './parentsdash';\nimport TGDash from './TGDash';\nimport App from './App.js'\n\nimport {config} from './utils.js'\n\nconst NodeCache = require( \"node-cache\" );\nconst myCache = new NodeCache();\n// -------------------------------------\n\nclass Main extends React.Component {\n  state = { storageValue: 0, web3: null, accounts: null, contract: null };\n\n  render(){\n    return(\n      <div>\n      <NavExample />\n      <HashRouter>\n        <Route exact path=\"/\" component={TrackArtifact}/>\n        <Route path=\"/new-review\" component={CreateReview}/>\n        <Route path=\"/new-token\" component={CreateToken}/>\n        <Route path=\"/profile\" component={Profile}/>\n      </HashRouter>\n      <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/leaflet.css\" />\n      </div>\n    );\n  }\n\n  \n}\n\n\nReactDOM.render(\n  <Main />,\n  document.getElementById('root')\n);\n","import React from \"react\";\nimport ApplicationSign from \"./contracts/ApplicationSign.json\";\nimport getWeb3 from \"./utils/getWeb3\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = { storageValue: 0, web3: null, accounts: null, contract: null };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = ApplicationSign.networks[networkId];\n      const instance = new web3.eth.Contract(\n        ApplicationSign.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance }, this.runExample);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  runExample = async () => {\n    const { accounts, contract } = this.state;\n\n    // Stores a given value, 5 by default.\n    await contract.methods.set(5).send({ from: accounts[0] });\n\n    // Get the value from the contract to prove it worked.\n    const response = await contract.methods.get().call();\n\n    // Update state with the result.\n    this.setState({ storageValue: response });\n  };\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <div className=\"App\">\n        <h1>Good to Go!</h1>\n        <p>Your Truffle Box is installed and ready.</p>\n        <h2>Smart Contract Example</h2>\n        <p>\n          If your contracts compiled and migrated successfully, below will show\n          a stored value of 5 (by default).\n        </p>\n        <p>\n          Try changing the value stored on <strong>line 40</strong> of App.js.\n        </p>\n        <div>The stored value is: {this.state.storageValue}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 591;"],"sourceRoot":""}